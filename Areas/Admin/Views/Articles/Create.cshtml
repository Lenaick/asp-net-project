@model Projet3.Areas.Admin.Models.ArticleViewModelCreate

@{
    ViewBag.Title = "Articles - Nouveau";
    Layout = "/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Articles - Nouveau</h2>
<hr />

@using (Html.BeginForm("Create", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.idCategorie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idCategorie", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idCategorie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.titre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.titre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contenu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.contenu, new { @class = "form-control froala_editor" })
                @Html.ValidationMessageFor(model => model.contenu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.publie)
                    @Html.ValidationMessageFor(model => model.publie, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imageUrl, "", new { @class = "text-danger" })
                Ou
                @Html.TextBoxFor(model => model.imageFile, new { type = "file" })
                @Html.ValidationMessageFor(model => model.imageFile)
            </div>
        </div>
    </div>

    <div>
        <a href="@Url.Action("Index", "Articles")" class="btn btn-default">
            <i class="fas fa-chevron-circle-left"></i>
            Retour liste
        </a>
        <button onclick="$(this).parent('form').get(0).submit();" class="btn btn-primary">
            <i class="fas fa-check-circle"></i>
            Enregistrer
        </button>
    </div>
}

@section Styles {
    @Styles.Render("~/Content/froala_editor")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/froala_editor")

    <script type="text/javascript">
        $(function () {
            $('form').each(function () {
                if ($(this).data('validator'))
                    $(this).data('validator').settings.ignore = "div.fr-view,#contenu";
            });
            $('textarea.froala_editor').froalaEditor({
                imageUploadURL: '/FroalaApi/UploadImage',
                imageManagerLoadURL: '/FroalaApi/LoadImages',
                imageManagerDeleteURL: "/FroalaApi/DeleteImage",
                imageManagerDeleteMethod: "POST",
                toolbarButtons: ['fullscreen', 'bold', 'italic', 'underline', 'strikeThrough',
                    'subscript', 'superscript', '|', 'fontFamily', 'fontSize', 'color',
                    'inlineStyle', 'paragraphStyle', '|', 'paragraphFormat', 'align', 'formatOL',
                    'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage',
                    'insertVideo', 'insertTable', '|', 'emoticons', 'insertHR', 'selectAll',
                    'clearFormatting', '|', 'html', '|', 'undo', 'redo'],
                height: 300,
                iconsTemplate: 'font_awesome_5',
                fileUpload: false,
            })
                // Catch image removal from the editor.
                .on('froalaEditor.image.removed', function (e, editor, $img) {
                    $.ajax({
                        // Request method.
                        method: "POST",

                        // Request URL.
                        url: "/FroalaApi/DeleteImage",

                        // Request params.
                        data: {
                            src: $img.attr('src')
                        }
                    })
                        .done(function (data) {
                            console.log('image was deleted');
                        })
                        .fail(function (err) {
                            console.log('image delete problem: ' + JSON.stringify(err));
                        })
                })
        });
    </script>
}
