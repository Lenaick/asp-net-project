@using Projet3.Models
@model CreateLecteurViewModel
@{
    ViewBag.Title = "Je crée mon compte";
    ViewBag.ReturnUrl = !string.IsNullOrEmpty(ViewBag.ReturnUrl) ? ViewBag.ReturnUrl : null;
}

<h2>@ViewBag.Title</h2>
<section id="createForm">
    @using (Html.BeginForm("Create", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
    {
        if (TempData["alert"] != null)
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                @TempData["alert"]
            </div>
        }
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(m => m.pseudo)
            @Html.TextBoxFor(m => m.pseudo, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.pseudo, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.email)
            @Html.TextBoxFor(m => m.email, new { @class = "form-control", autocomplete = "off" })
            @Html.ValidationMessageFor(m => m.email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.password)
            @Html.PasswordFor(m => m.password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.confirm)
            @Html.PasswordFor(m => m.confirm, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.confirm, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <input type="submit" value="Créer mon compte" class="btn btn-primary" />
        </div>
    }
</section>